[
  {
    "request": {
      "body": "",
      "headers": {
        "User-agent": "Elixir kuroski"
      },
      "method": "get",
      "options": [],
      "request_body": "",
      "url": "https://api.github.com/repos/elixir-lang/elixir/issues"
    },
    "response": {
      "binary": false,
      "body": "[{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10978\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10978/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10978/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10978/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/10978\",\"id\":891109649,\"node_id\":\"MDU6SXNzdWU4OTExMDk2NDk=\",\"number\":10978,\"title\":\"Beam files aren't built with rebar3 3.14.4 + Elixir 1.12.0-rc.1 + build_embedded: true\",\"user\":{\"login\":\"fhunleth\",\"id\":64669,\"node_id\":\"MDQ6VXNlcjY0NjY5\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/64669?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/fhunleth\",\"html_url\":\"https://github.com/fhunleth\",\"followers_url\":\"https://api.github.com/users/fhunleth/followers\",\"following_url\":\"https://api.github.com/users/fhunleth/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/fhunleth/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/fhunleth/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/fhunleth/subscriptions\",\"organizations_url\":\"https://api.github.com/users/fhunleth/orgs\",\"repos_url\":\"https://api.github.com/users/fhunleth/repos\",\"events_url\":\"https://api.github.com/users/fhunleth/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/fhunleth/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"assignees\":[],\"milestone\":null,\"comments\":0,\"created_at\":\"2021-05-13T14:51:51Z\",\"updated_at\":\"2021-05-13T14:51:51Z\",\"closed_at\":null,\"author_association\":\"CONTRIBUTOR\",\"active_lock_reason\":null,\"body\":\"### Environment\\r\\n\\r\\n* Elixir & Erlang/OTP versions (elixir --version): \\r\\n\\r\\n```sh \\r\\n$ elixir --version\\r\\nErlang/OTP 23 [erts-11.2] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:1]\\r\\n\\r\\nElixir 1.12.0-rc.1 (ce321f8) (compiled with Erlang/OTP 23)\\r\\n```\\r\\n\\r\\nAnd\\r\\n\\r\\n```sh\\r\\n$ /Users/fhunleth/.asdf/installs/elixir/1.12.0-rc.1-otp-23/.mix/rebar3 --version\\r\\nrebar 3.14.4 on Erlang/OTP 23 Erts 11.2\\r\\n```\\r\\n\\r\\nSince old rebar3 versions could affect this and that was originally an issue in my setup, I deleted all `rebar3` binaries every where else and reproduced on two machines.\\r\\n\\r\\n* Operating system: \\r\\n\\r\\nOSX and Ubuntu\\r\\n\\r\\n### Current behavior\\r\\n\\r\\nHere's a demo: https://github.com/fhunleth/elixir_rebar3_test\\r\\n\\r\\nWhen I build that test project, no `.beam` files get built in `cowlib`. This causes problems later on.\\r\\n\\r\\nSo far I've been able to narrow this down to whether `build_embedded` is enabled or not.\\r\\n\\r\\n\",\"performed_via_github_app\":null},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10977\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10977/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10977/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10977/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/pull/10977\",\"id\":890863318,\"node_id\":\"MDExOlB1bGxSZXF1ZXN0NjQzODIwMzU0\",\"number\":10977,\"title\":\"Better format Elixir exceptions in Erlang\",\"user\":{\"login\":\"josevalim\",\"id\":9582,\"node_id\":\"MDQ6VXNlcjk1ODI=\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"assignees\":[],\"milestone\":null,\"comments\":0,\"created_at\":\"2021-05-13T08:57:06Z\",\"updated_at\":\"2021-05-13T19:42:53Z\",\"closed_at\":null,\"author_association\":\"MEMBER\",\"active_lock_reason\":null,\"pull_request\":{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/pulls/10977\",\"html_url\":\"https://github.com/elixir-lang/elixir/pull/10977\",\"diff_url\":\"https://github.com/elixir-lang/elixir/pull/10977.diff\",\"patch_url\":\"https://github.com/elixir-lang/elixir/pull/10977.patch\"},\"body\":\"This PR uses EEP 54 so Elixir exceptions are nicely\\r\\nformatted by Erlang callers. Take this code:\\r\\n\\r\\n    raise \\\"this is a test\\\"\\r\\n\\r\\nBefore:\\r\\n\\r\\n    ** exception error: #{'__exception__' => true,\\r\\n                          '__struct__' => 'Elixir.RuntimeError',\\r\\n                          message => <<\\\"this is a test\\\">>}\\r\\n       in function  'Elixir.Foo':bar/0 (iex, line 2)\\r\\n\\r\\nAfter:\\r\\n\\r\\n    ** exception error: #Elixir.RuntimeError\\r\\n       in function  'Elixir.Foo':bar/0 (iex, line 2)\\r\\n          *** this is a test\\r\\n\\r\\nThis depends on https://github.com/erlang/otp/pull/4764.\",\"performed_via_github_app\":null},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10974\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10974/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10974/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10974/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/10974\",\"id\":889915456,\"node_id\":\"MDU6SXNzdWU4ODk5MTU0NTY=\",\"number\":10974,\"title\":\"Failure in linked process during ExUnit on_exit doesn't change process exit code\",\"user\":{\"login\":\"chaodhib\",\"id\":6612710,\"node_id\":\"MDQ6VXNlcjY2MTI3MTA=\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/6612710?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/chaodhib\",\"html_url\":\"https://github.com/chaodhib\",\"followers_url\":\"https://api.github.com/users/chaodhib/followers\",\"following_url\":\"https://api.github.com/users/chaodhib/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/chaodhib/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/chaodhib/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/chaodhib/subscriptions\",\"organizations_url\":\"https://api.github.com/users/chaodhib/orgs\",\"repos_url\":\"https://api.github.com/users/chaodhib/repos\",\"events_url\":\"https://api.github.com/users/chaodhib/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/chaodhib/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":109230298,\"node_id\":\"MDU6TGFiZWwxMDkyMzAyOTg=\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:ExUnit\",\"name\":\"App:ExUnit\",\"color\":\"CCCCCC\",\"default\":false,\"description\":null},{\"id\":207974,\"node_id\":\"MDU6TGFiZWwyMDc5NzQ=\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"e10c02\",\"default\":false,\"description\":null}],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"assignees\":[],\"milestone\":null,\"comments\":0,\"created_at\":\"2021-05-12T10:07:48Z\",\"updated_at\":\"2021-05-12T10:12:10Z\",\"closed_at\":null,\"author_association\":\"NONE\",\"active_lock_reason\":null,\"body\":\"### Environment\\r\\n\\r\\n* Elixir & Erlang/OTP versions (elixir --version): Elixir 1.10.4 OTP 22\\r\\n* Operating system: Ubuntu \\r\\n\\r\\n### Current behavior\\r\\n\\r\\nThe issue is very similar to https://github.com/elixir-lang/elixir/issues/5967 except here, it is about the [on_exit/2](https://hexdocs.pm/ex_unit/ExUnit.Callbacks.html#on_exit/2) callback: if an error occurs during the callback, that error does not influence the exit code. Also, the test is marked as succesful (despite the message \\\"all tests have been invalidated\\\")\\r\\n\\r\\n```Elixir\\r\\ndefmodule SampleTest do\\r\\n  use ExUnit.Case\\r\\n  doctest Sample\\r\\n\\r\\n  setup_all do\\r\\n    on_exit(fn -> raise \\\"boom\\\" end)\\r\\n\\r\\n    :ok\\r\\n  end\\r\\n\\r\\n  test \\\"greets the world\\\" do\\r\\n    assert Sample.hello() == :world\\r\\n  end\\r\\nend\\r\\n```\\r\\n\\r\\n```\\r\\n  1) SampleTest: failure on setup_all callback, all tests have been invalidated\\r\\n     ** (RuntimeError) boom\\r\\n     stacktrace:\\r\\n       test/sample_test.exs:6: anonymous fn/0 in SampleTest.__ex_unit_setup_all_0/1\\r\\n       (ex_unit 1.10.4) lib/ex_unit/on_exit_handler.ex:142: ExUnit.OnExitHandler.exec_callback/1\\r\\n       (ex_unit 1.10.4) lib/ex_unit/on_exit_handler.ex:128: ExUnit.OnExitHandler.on_exit_runner_loop/0\\r\\n\\r\\n\\r\\n\\r\\nFinished in 0.03 seconds\\r\\n1 test, 0 failures\\r\\n```\\r\\n\\r\\n### Expected behavior\\r\\n\\r\\nA non-zero exit code and the tests affected by the setup_all where the on_exit callback was initialized should be marked as failed.\\r\\n\",\"performed_via_github_app\":null},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10954\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10954/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10954/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10954/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/pull/10954\",\"id\":867105625,\"node_id\":\"MDExOlB1bGxSZXF1ZXN0NjIyODM0MTE2\",\"number\":10954,\"title\":\"Allow filtering modules from coverage using regex\",\"user\":{\"login\":\"hauleth\",\"id\":291639,\"node_id\":\"MDQ6VXNlcjI5MTYzOQ==\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/291639?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hauleth\",\"html_url\":\"https://github.com/hauleth\",\"followers_url\":\"https://api.github.com/users/hauleth/followers\",\"following_url\":\"https://api.github.com/users/hauleth/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hauleth/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hauleth/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hauleth/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hauleth/orgs\",\"repos_url\":\"https://api.github.com/users/hauleth/repos\",\"events_url\":\"https://api.github.com/users/hauleth/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hauleth/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"assignees\":[],\"milestone\":null,\"comments\":2,\"created_at\":\"2021-04-25T20:24:52Z\",\"updated_at\":\"2021-05-14T05:38:30Z\",\"closed_at\":null,\"author_association\":\"CONTRIBUTOR\",\"active_lock_reason\":null,\"pull_request\":{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/pulls/10954\",\"html_url\":\"https://github.com/elixir-lang/elixir/pull/10954\",\"diff_url\":\"https://github.com/elixir-lang/elixir/pull/10954.diff\",\"patch_url\":\"https://github.com/elixir-lang/elixir/pull/10954.patch\"},\"body\":\"This can be handy in case of many generated modules (in my case it was `Cldr` module containing a lot of generated code) and protocol modules that aren't really interesting for our application (for example `Inspect` protocol when filtering out fields like passwords).\",\"performed_via_github_app\":null},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10865\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10865/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10865/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10865/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/10865\",\"id\":849485938,\"node_id\":\"MDU6SXNzdWU4NDk0ODU5Mzg=\",\"number\":10865,\"title\":\"Deprecate URI.parse\",\"user\":{\"login\":\"josevalim\",\"id\":9582,\"node_id\":\"MDQ6VXNlcjk1ODI=\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":17739153,\"node_id\":\"MDU6TGFiZWwxNzczOTE1Mw==\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir\",\"name\":\"App:Elixir\",\"color\":\"CCCCCC\",\"default\":false,\"description\":null},{\"id\":207979,\"node_id\":\"MDU6TGFiZWwyMDc5Nzk=\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Chore\",\"name\":\"Kind:Chore\",\"color\":\"fbca04\",\"default\":false,\"description\":null},{\"id\":778790,\"node_id\":\"MDU6TGFiZWw3Nzg3OTA=\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Note:Discussion\",\"name\":\"Note:Discussion\",\"color\":\"bfdadc\",\"default\":false,\"description\":null}],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"assignees\":[],\"milestone\":{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/milestones/29\",\"html_url\":\"https://github.com/elixir-lang/elixir/milestone/29\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/milestones/29/labels\",\"id\":6607202,\"node_id\":\"MDk6TWlsZXN0b25lNjYwNzIwMg==\",\"number\":29,\"title\":\"v1.13\",\"description\":\"\",\"creator\":{\"login\":\"josevalim\",\"id\":9582,\"node_id\":\"MDQ6VXNlcjk1ODI=\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":2,\"closed_issues\":1,\"state\":\"open\",\"created_at\":\"2021-03-30T08:17:08Z\",\"updated_at\":\"2021-04-02T21:13:05Z\",\"due_on\":null,\"closed_at\":null},\"comments\":14,\"created_at\":\"2021-04-02T21:12:16Z\",\"updated_at\":\"2021-05-06T05:27:22Z\",\"closed_at\":null,\"author_association\":\"MEMBER\",\"active_lock_reason\":null,\"body\":\"I was planning to move `URI.parse/1` to use Erlang's `:uri_string.parse/1` and it seems our implementation returns valid results for invalid URLs, such as:\\r\\n\\r\\n    URI.parse(\\\"https:??@?F?@#>F//23/\\\")\\r\\n\\r\\nOur implementation only uses a Regex, instead of a proper parser as done in Erlang, so we should probably migrate over. This is also a good opportunity to deprecate the :authority field as it causes ambiguity issues. Once we deprecate the authority field, we should also allow users to create URIs by hand. The big question is what should be the new API:\\r\\n\\r\\n  1.  `URI.new(string | t) :: {:ok, t} | {:error, reason}`\\r\\n  2.  `URI.dissect(string | t) :: {:ok, t} | {:error, reason}`\\r\\n\\r\\nAny other options?\",\"performed_via_github_app\":null},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10823\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10823/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10823/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10823/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/10823\",\"id\":842502678,\"node_id\":\"MDU6SXNzdWU4NDI1MDI2Nzg=\",\"number\":10823,\"title\":\"Wrong \\\"incompatible types\\\" warning with tuples\",\"user\":{\"login\":\"eksperimental\",\"id\":9133420,\"node_id\":\"MDQ6VXNlcjkxMzM0MjA=\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/9133420?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/eksperimental\",\"html_url\":\"https://github.com/eksperimental\",\"followers_url\":\"https://api.github.com/users/eksperimental/followers\",\"following_url\":\"https://api.github.com/users/eksperimental/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/eksperimental/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/eksperimental/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/eksperimental/subscriptions\",\"organizations_url\":\"https://api.github.com/users/eksperimental/orgs\",\"repos_url\":\"https://api.github.com/users/eksperimental/repos\",\"events_url\":\"https://api.github.com/users/eksperimental/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/eksperimental/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":2660471585,\"node_id\":\"MDU6TGFiZWwyNjYwNDcxNTg1\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir%20(checker)\",\"name\":\"App:Elixir (checker)\",\"color\":\"CCCCCC\",\"default\":false,\"description\":\"\"},{\"id\":207974,\"node_id\":\"MDU6TGFiZWwyMDc5NzQ=\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"e10c02\",\"default\":false,\"description\":null}],\"state\":\"open\",\"locked\":false,\"assignee\":{\"login\":\"ericmj\",\"id\":316890,\"node_id\":\"MDQ6VXNlcjMxNjg5MA==\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/316890?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/ericmj\",\"html_url\":\"https://github.com/ericmj\",\"followers_url\":\"https://api.github.com/users/ericmj/followers\",\"following_url\":\"https://api.github.com/users/ericmj/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/ericmj/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/ericmj/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/ericmj/subscriptions\",\"organizations_url\":\"https://api.github.com/users/ericmj/orgs\",\"repos_url\":\"https://api.github.com/users/ericmj/repos\",\"events_url\":\"https://api.github.com/users/ericmj/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/ericmj/received_events\",\"type\":\"User\",\"site_admin\":false},\"assignees\":[{\"login\":\"ericmj\",\"id\":316890,\"node_id\":\"MDQ6VXNlcjMxNjg5MA==\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/316890?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/ericmj\",\"html_url\":\"https://github.com/ericmj\",\"followers_url\":\"https://api.github.com/users/ericmj/followers\",\"following_url\":\"https://api.github.com/users/ericmj/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/ericmj/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/ericmj/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/ericmj/subscriptions\",\"organizations_url\":\"https://api.github.com/users/ericmj/orgs\",\"repos_url\":\"https://api.github.com/users/ericmj/repos\",\"events_url\":\"https://api.github.com/users/ericmj/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/ericmj/received_events\",\"type\":\"User\",\"site_admin\":false}],\"milestone\":null,\"comments\":0,\"created_at\":\"2021-03-27T13:17:56Z\",\"updated_at\":\"2021-03-30T12:17:09Z\",\"closed_at\":null,\"author_association\":\"MEMBER\",\"active_lock_reason\":null,\"body\":\"### Environment\\r\\n\\r\\n* Elixir & Erlang/OTP versions (elixir --version): Elixir 1.12.0-dev (251413a) (compiled with Erlang/OTP 23)\\r\\n \\r\\n### Current behavior\\r\\n\\r\\n```elixir\\r\\ndefmodule Debug.Warning do\\r\\n  def warning_with_tuples(bar, location) do\\r\\n    case bar do\\r\\n      {} when is_tuple(location) ->\\r\\n        {file, line} = location\\r\\n        %{file: file, line: line}\\r\\n\\r\\n      _ ->\\r\\n        nil\\r\\n    end\\r\\n  end\\r\\nend\\r\\n```\\r\\n\\r\\n```console\\r\\n$ mix\\r\\nCompiling 1 file (.ex)\\r\\nwarning: incompatible types:\\r\\n\\r\\n    tuple() !~ {var0, var1}\\r\\n\\r\\nin expression:\\r\\n\\r\\n    # lib/debug/warning.ex:5\\r\\n    {file, line} = location\\r\\n\\r\\nwhere \\\"location\\\" was given the type tuple() in:\\r\\n\\r\\n    # lib/debug/warning.ex:4\\r\\n    is_tuple(location)\\r\\n\\r\\nwhere \\\"location\\\" was given the type {var0, var1} in:\\r\\n\\r\\n    # lib/debug/warning.ex:5\\r\\n    {file, line} = location\\r\\n\\r\\nConflict found at\\r\\n  lib/debug/warning.ex:5: Debug.Warning.warning_with_tuples/2\\r\\n```\\r\\n\\r\\n### Expected behavior\\r\\n\\r\\nNo warnings\\r\\n\\r\\n/cc @ericmj\",\"performed_via_github_app\":null},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10813\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10813/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10813/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10813/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/10813\",\"id\":840704496,\"node_id\":\"MDU6SXNzdWU4NDA3MDQ0OTY=\",\"number\":10813,\"title\":\"Make ranges have a default step of 1\",\"user\":{\"login\":\"josevalim\",\"id\":9582,\"node_id\":\"MDQ6VXNlcjk1ODI=\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":17739153,\"node_id\":\"MDU6TGFiZWwxNzczOTE1Mw==\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir\",\"name\":\"App:Elixir\",\"color\":\"CCCCCC\",\"default\":false,\"description\":null},{\"id\":207979,\"node_id\":\"MDU6TGFiZWwyMDc5Nzk=\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Chore\",\"name\":\"Kind:Chore\",\"color\":\"fbca04\",\"default\":false,\"description\":null}],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"assignees\":[],\"milestone\":{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/milestones/19\",\"html_url\":\"https://github.com/elixir-lang/elixir/milestone/19\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/milestones/19/labels\",\"id\":1889114,\"node_id\":\"MDk6TWlsZXN0b25lMTg4OTExNA==\",\"number\":19,\"title\":\"v2.0\",\"description\":\"\",\"creator\":{\"login\":\"josevalim\",\"id\":9582,\"node_id\":\"MDQ6VXNlcjk1ODI=\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":2,\"closed_issues\":0,\"state\":\"open\",\"created_at\":\"2016-07-18T10:36:08Z\",\"updated_at\":\"2021-03-30T08:17:50Z\",\"due_on\":null,\"closed_at\":null},\"comments\":4,\"created_at\":\"2021-03-25T08:50:10Z\",\"updated_at\":\"2021-04-26T06:55:49Z\",\"closed_at\":null,\"author_association\":\"MEMBER\",\"active_lock_reason\":null,\"body\":\"Today ranges without an explicit step have their step inferred based on start..stop, but instead we should default to always be 1. Given this is a breaking change, it has to be assigned to Elixir v2.0 (which is still not planned nor scheduled).\\r\\n\\r\\nThe goal is to deprecate most of those cases early on, to avoid surprises down the road. We should also consider adding a `elixir --future` flag that allows developers to run and compile their codebase with these changes early on.\",\"performed_via_github_app\":null},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10489\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10489/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10489/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10489/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/10489\",\"id\":740839581,\"node_id\":\"MDU6SXNzdWU3NDA4Mzk1ODE=\",\"number\":10489,\"title\":\"Add :take to comprehensions\",\"user\":{\"login\":\"josevalim\",\"id\":9582,\"node_id\":\"MDQ6VXNlcjk1ODI=\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":17739153,\"node_id\":\"MDU6TGFiZWwxNzczOTE1Mw==\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir\",\"name\":\"App:Elixir\",\"color\":\"CCCCCC\",\"default\":false,\"description\":null},{\"id\":4930795,\"node_id\":\"MDU6TGFiZWw0OTMwNzk1\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Enhancement\",\"name\":\"Kind:Enhancement\",\"color\":\"009800\",\"default\":false,\"description\":null}],\"state\":\"open\",\"locked\":false,\"assignee\":{\"login\":\"josevalim\",\"id\":9582,\"node_id\":\"MDQ6VXNlcjk1ODI=\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"assignees\":[{\"login\":\"josevalim\",\"id\":9582,\"node_id\":\"MDQ6VXNlcjk1ODI=\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false}],\"milestone\":null,\"comments\":7,\"created_at\":\"2020-11-11T15:08:05Z\",\"updated_at\":\"2021-05-07T01:59:16Z\",\"closed_at\":null,\"author_association\":\"MEMBER\",\"active_lock_reason\":null,\"body\":\"It expects a positive integer and it will restrict the amount of results returned. For `into: \\\"\\\"` and custom collectables, it controls how many times the collectable function is called.\",\"performed_via_github_app\":null},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10485\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10485/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10485/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10485/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/10485\",\"id\":737000877,\"node_id\":\"MDU6SXNzdWU3MzcwMDA4Nzc=\",\"number\":10485,\"title\":\"Doctest generates an incompatible type warning\",\"user\":{\"login\":\"TBK145\",\"id\":13980326,\"node_id\":\"MDQ6VXNlcjEzOTgwMzI2\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/13980326?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/TBK145\",\"html_url\":\"https://github.com/TBK145\",\"followers_url\":\"https://api.github.com/users/TBK145/followers\",\"following_url\":\"https://api.github.com/users/TBK145/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/TBK145/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/TBK145/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/TBK145/subscriptions\",\"organizations_url\":\"https://api.github.com/users/TBK145/orgs\",\"repos_url\":\"https://api.github.com/users/TBK145/repos\",\"events_url\":\"https://api.github.com/users/TBK145/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/TBK145/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":2660471585,\"node_id\":\"MDU6TGFiZWwyNjYwNDcxNTg1\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir%20(checker)\",\"name\":\"App:Elixir (checker)\",\"color\":\"CCCCCC\",\"default\":false,\"description\":\"\"},{\"id\":207974,\"node_id\":\"MDU6TGFiZWwyMDc5NzQ=\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"e10c02\",\"default\":false,\"description\":null}],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"assignees\":[],\"milestone\":null,\"comments\":10,\"created_at\":\"2020-11-05T14:52:13Z\",\"updated_at\":\"2021-03-01T21:55:17Z\",\"closed_at\":null,\"author_association\":\"CONTRIBUTOR\",\"active_lock_reason\":null,\"body\":\"### Environment\\r\\n\\r\\n* Elixir & Erlang/OTP versions (elixir --version): 1.11.2 / 23.1.1\\r\\n* Operating system: Linux 5.9.3-arch1-1 #1 SMP PREEMPT Sun, 01 Nov 2020 12:58:59 +0000 x86_64 unknown unknown GNU/Linux\\r\\n\\r\\n### Current behavior\\r\\n\\r\\nWe have a function for validating a certain struct, but our doctest seems to generate a warning. The warning itself is obvious, but the test is also to show it's wrong.\\r\\n```\\r\\ndefmodule Foo do\\r\\n  defstruct [:bar]\\r\\n\\r\\n  @doc \\\"\\\"\\\"\\r\\n  Returns if the argument is a valid Foo struct or not.\\r\\n\\r\\n  iex> Foo.is_valid?(%{})\\r\\n  false\\r\\n  iex> Foo.is_valid?(%Foo{})\\r\\n  false\\r\\n  iex> Foo.is_valid?(%Foo{bar: \\\"baz\\\"})\\r\\n  true\\r\\n  \\\"\\\"\\\"\\r\\n  @spec is_valid?(any()) :: boolean()\\r\\n  defguard is_valid?(term)\\r\\n           when is_struct(term, __MODULE__) and is_map_key(term, :bar) and not is_nil(term.bar)\\r\\nend\\r\\n```\\r\\n\\r\\nI think that the code and tests are valid, but the doctest generates this warning:\\r\\n```\\r\\nwarning: undefined field \\\"bar\\\" in expression:\\r\\n\\r\\n    # (for doctest at) lib/foo.ex:7\\r\\n    arg0.bar\\r\\n\\r\\nexpected one of the following fields: \\r\\n\\r\\nwhere \\\"arg0\\\" was given the type map() in:\\r\\n\\r\\n    # (for doctest at) lib/foo.ex:7\\r\\n    {arg0} = {%{}}\\r\\n\\r\\nConflict found at\\r\\n  (for doctest at) lib/foo.ex:7: FooTest.\\\"doctest Foo.is_valid?/1 (1)\\\"/1\\r\\n```\\r\\nIt will show the error for any type other than `%Foo{}`.\\r\\n\\r\\n### Expected behavior\\r\\n\\r\\nNo warnings when running the doctest.\\r\\n\",\"performed_via_github_app\":null},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10433\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10433/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10433/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/10433/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/10433\",\"id\":723327714,\"node_id\":\"MDU6SXNzdWU3MjMzMjc3MTQ=\",\"number\":10433,\"title\":\"Support Erlang/OTP 24 new features\",\"user\":{\"login\":\"josevalim\",\"id\":9582,\"node_id\":\"MDQ6VXNlcjk1ODI=\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":17739153,\"node_id\":\"MDU6TGFiZWwxNzczOTE1Mw==\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir\",\"name\":\"App:Elixir\",\"color\":\"CCCCCC\",\"default\":false,\"description\":null},{\"id\":207979,\"node_id\":\"MDU6TGFiZWwyMDc5Nzk=\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Chore\",\"name\":\"Kind:Chore\",\"color\":\"fbca04\",\"default\":false,\"description\":null}],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"assignees\":[],\"milestone\":null,\"comments\":5,\"created_at\":\"2020-10-16T15:36:41Z\",\"updated_at\":\"2021-05-12T18:41:14Z\",\"closed_at\":null,\"author_association\":\"MEMBER\",\"active_lock_reason\":null,\"body\":\"To be implemented when Erlang 24 is released:\\r\\n\\r\\n  * [x] Use `os:env/0` in `System.get_env/0` (requires a `function_exported?` check)\\r\\n  * [x] The OTP breaking change to stacktraces requires rebar3 to ship multiple compiled binaries, we need to align with this on `mix local.rebar`\\r\\n  * [x] Support EEP 54\\r\\n  * [x] Support float-16\\r\\n  * [x] Use maps on erl_eval\\r\\n  * [ ] Show snippets on CompileError/TokenMissingError/SyntaxError\\r\\n  * [ ] Emit error_info from Elixir exceptions (https://github.com/erlang/otp/pull/4764)\\r\\n\\r\\nTo be implemented when we require Erlang 24 exclusively:\\r\\n\\r\\n  * [ ] Use from_abstr+no_lint (see https://github.com/erlang/otp/pull/3019)\\r\\n  * [ ] epmdless (https://blog.erlware.org/epmdlessless/)\\r\\n  * [ ] `maps:from_keys/2`\\r\\n  * [ ] Remove `rand` from release scripts and pass undefined as name/sname\\r\\n  * [ ] Use sets (v2) in MapSet\\r\\n  * [ ] Properly support optional applications\\r\\n  * [ ] Investigate the use of process alias in tasks and the new APIs (as described in EEP 53)\\r\\n  * [ ] EEP 56\\r\\n\\r\\nPlease do not send PRs for those, as it will take a while until we can effectively accept them.\",\"performed_via_github_app\":null},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/9603\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/9603/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/9603/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/9603/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/9603\",\"id\":529476666,\"node_id\":\"MDU6SXNzdWU1Mjk0NzY2NjY=\",\"number\":9603,\"title\":\"Support Erlang/OTP 23 new features\",\"user\":{\"login\":\"josevalim\",\"id\":9582,\"node_id\":\"MDQ6VXNlcjk1ODI=\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":17739153,\"node_id\":\"MDU6TGFiZWwxNzczOTE1Mw==\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir\",\"name\":\"App:Elixir\",\"color\":\"CCCCCC\",\"default\":false,\"description\":null},{\"id\":207979,\"node_id\":\"MDU6TGFiZWwyMDc5Nzk=\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Chore\",\"name\":\"Kind:Chore\",\"color\":\"fbca04\",\"default\":false,\"description\":null}],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"assignees\":[],\"milestone\":null,\"comments\":2,\"created_at\":\"2019-11-27T17:10:30Z\",\"updated_at\":\"2021-02-10T15:49:42Z\",\"closed_at\":null,\"author_association\":\"MEMBER\",\"active_lock_reason\":null,\"body\":\"To be implemented when Erlang 23 is released:\\r\\n\\r\\n  * [x] Show Erlang docs in the shell (see #9843)\\r\\n  * [x] Tackle #9337\\r\\n\\r\\nTo be implemented when we require Erlang 23 exclusively:\\r\\n\\r\\n  * [ ] Provide `Path.safe_relative_path/1/2` on top of `filelib:safe_relative_path/2`\\r\\n  * [ ] Add `Node.spawn_monitor`\\r\\n  * [ ] Support new rules in map and binary matching ([EEP 52](https://github.com/erlang/otp/pull/2521))\\r\\n  * [ ] Rewrite `Atom.to_string/1` to `:erlang.atom_to_binary/1` (and others)\\r\\n\\r\\nPlease do not send PRs for those, as it will take a while until we can effectively accept them.\",\"performed_via_github_app\":null},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/9510\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/9510/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/9510/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/9510/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/9510\",\"id\":520133627,\"node_id\":\"MDU6SXNzdWU1MjAxMzM2Mjc=\",\"number\":9510,\"title\":\"Remove ambiguity in nullary remote calls with unknown targets\",\"user\":{\"login\":\"josevalim\",\"id\":9582,\"node_id\":\"MDQ6VXNlcjk1ODI=\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":17739153,\"node_id\":\"MDU6TGFiZWwxNzczOTE1Mw==\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir\",\"name\":\"App:Elixir\",\"color\":\"CCCCCC\",\"default\":false,\"description\":null},{\"id\":207979,\"node_id\":\"MDU6TGFiZWwyMDc5Nzk=\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Chore\",\"name\":\"Kind:Chore\",\"color\":\"fbca04\",\"default\":false,\"description\":null}],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"assignees\":[],\"milestone\":{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/milestones/29\",\"html_url\":\"https://github.com/elixir-lang/elixir/milestone/29\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/milestones/29/labels\",\"id\":6607202,\"node_id\":\"MDk6TWlsZXN0b25lNjYwNzIwMg==\",\"number\":29,\"title\":\"v1.13\",\"description\":\"\",\"creator\":{\"login\":\"josevalim\",\"id\":9582,\"node_id\":\"MDQ6VXNlcjk1ODI=\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":2,\"closed_issues\":1,\"state\":\"open\",\"created_at\":\"2021-03-30T08:17:08Z\",\"updated_at\":\"2021-04-02T21:13:05Z\",\"due_on\":null,\"closed_at\":null},\"comments\":6,\"created_at\":\"2019-11-08T17:16:55Z\",\"updated_at\":\"2021-04-06T14:53:24Z\",\"closed_at\":null,\"author_association\":\"MEMBER\",\"active_lock_reason\":null,\"body\":\"  * [ ] Deprecate `map.foo()` in favor of `map.foo`\\r\\n  * [ ] Deprecate `mod.foo` in favor of `mod.foo()`\\r\\n  * [ ] Change the AST so remote calls (`A.b`, `a.b`, etc) without parens has `nil` third element\\r\\n\\r\\nPS: originally this issue was about deprecating all nullary remote calls without parens, but it has been restricted since then. See [this comment](https://github.com/elixir-lang/elixir/issues/9510#issuecomment-598136655) for more info.\",\"performed_via_github_app\":null},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/9465\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/9465/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/9465/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/9465/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/9465\",\"id\":516234145,\"node_id\":\"MDU6SXNzdWU1MTYyMzQxNDU=\",\"number\":9465,\"title\":\"Logger improvements\",\"user\":{\"login\":\"hauleth\",\"id\":291639,\"node_id\":\"MDQ6VXNlcjI5MTYzOQ==\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/291639?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hauleth\",\"html_url\":\"https://github.com/hauleth\",\"followers_url\":\"https://api.github.com/users/hauleth/followers\",\"following_url\":\"https://api.github.com/users/hauleth/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hauleth/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hauleth/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hauleth/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hauleth/orgs\",\"repos_url\":\"https://api.github.com/users/hauleth/repos\",\"events_url\":\"https://api.github.com/users/hauleth/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hauleth/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":119389005,\"node_id\":\"MDU6TGFiZWwxMTkzODkwMDU=\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:Logger\",\"name\":\"App:Logger\",\"color\":\"cccccc\",\"default\":false,\"description\":null},{\"id\":207979,\"node_id\":\"MDU6TGFiZWwyMDc5Nzk=\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Chore\",\"name\":\"Kind:Chore\",\"color\":\"fbca04\",\"default\":false,\"description\":null},{\"id\":778790,\"node_id\":\"MDU6TGFiZWw3Nzg3OTA=\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Note:Discussion\",\"name\":\"Note:Discussion\",\"color\":\"bfdadc\",\"default\":false,\"description\":null}],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"assignees\":[],\"milestone\":null,\"comments\":26,\"created_at\":\"2019-11-01T17:01:04Z\",\"updated_at\":\"2021-04-07T12:07:23Z\",\"closed_at\":null,\"author_association\":\"CONTRIBUTOR\",\"active_lock_reason\":null,\"body\":\"- [ ] Migrate `:console` backend to be defined as a formatter for `logger_std_h` - this will allow to use the same format as Elixir is using for other handlers as well (requires erlang/otp#2491 - OTP 24+ and erlang/otp#2523 - OTP 23+)\\r\\n- [ ] Only attach built-in `Logger.Handler` if there will be backends (depends on the above)\\r\\n- [ ] Do not depend on logger:macro_log (requires https://github.com/erlang/otp/pull/2721 - OTP 24+)\\r\\n- [x] Expose API for module and application level verbosity control (#9793)\\r\\n- [x] Expose and document all of Erlang built-in logger levels (#9791)\\r\\n- [x] Add support for passing map as a \\\"message\\\" to the `Logger` macros to allow structured logging (needs to be fully discussed before) (#9797)\\r\\n- [x] Use `time` field from metadata instead of generating new timestamp (#9772)\\r\\n- [ ] Make `Logger.Formatter` works also as a Erlang's logger formatter for use with Erlang's logger handlers\\r\\n- [ ] Make translators a step in `Logger.Formatter.format/2` instead of running them independently\\r\\n- [ ] Document usage and configuration of Erlang's handlers with Elixir's `Logger`\\r\\n- [ ] Support configuration of `logger` via `kernel` options (erlang/otp#4663)\",\"performed_via_github_app\":null},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/8262\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/8262/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/8262/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/8262/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/8262\",\"id\":368335571,\"node_id\":\"MDU6SXNzdWUzNjgzMzU1NzE=\",\"number\":8262,\"title\":\"mix clean --deps does not clean out .erl files generated by yecc/leex\",\"user\":{\"login\":\"f355\",\"id\":145105,\"node_id\":\"MDQ6VXNlcjE0NTEwNQ==\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/145105?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/f355\",\"html_url\":\"https://github.com/f355\",\"followers_url\":\"https://api.github.com/users/f355/followers\",\"following_url\":\"https://api.github.com/users/f355/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/f355/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/f355/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/f355/subscriptions\",\"organizations_url\":\"https://api.github.com/users/f355/orgs\",\"repos_url\":\"https://api.github.com/users/f355/repos\",\"events_url\":\"https://api.github.com/users/f355/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/f355/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":10229539,\"node_id\":\"MDU6TGFiZWwxMDIyOTUzOQ==\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:Mix\",\"name\":\"App:Mix\",\"color\":\"CCCCCC\",\"default\":false,\"description\":null},{\"id\":207974,\"node_id\":\"MDU6TGFiZWwyMDc5NzQ=\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"e10c02\",\"default\":false,\"description\":null},{\"id\":39802986,\"node_id\":\"MDU6TGFiZWwzOTgwMjk4Ng==\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Level:Advanced\",\"name\":\"Level:Advanced\",\"color\":\"f7c6c7\",\"default\":false,\"description\":null}],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"assignees\":[],\"milestone\":null,\"comments\":11,\"created_at\":\"2018-10-09T18:19:31Z\",\"updated_at\":\"2020-07-14T16:21:06Z\",\"closed_at\":null,\"author_association\":\"NONE\",\"active_lock_reason\":null,\"body\":\"### Current behavior\\r\\n\\r\\nWhen running `mix clean --deps`, the `.erl` files generated from `.xrl`/`.yrl` are left behind.\\r\\n\\r\\n### Expected behavior\\r\\n\\r\\nAll artefacts and intermediate files for the dependencies are deleted after running `mix clean --deps`, leaving the tree as it looked after `mix deps.get`, before the compilation.\\r\\n\\r\\n### Steps to reproduce\\r\\n\\r\\nI'll use Absinthe as an example dependency. I'm using a GitHub tag instead of Hex version, because the artefact pushed to Hex has the `.erl` files in question included for some reason (which might be a separate issue around `mix hex.publish` that's outside of the scope for this bug report).\\r\\n\\r\\n- Create a new project: `mix new mix_bug && cd mix_bug`\\r\\n- Edit mix.exs to add `{:absinthe, git: \\\"https://github.com/absinthe-graphql/absinthe.git\\\", tag: \\\"v1.4.13\\\"}` to the list of deps.\\r\\n- Fetch the dependencies: `mix deps.get`\\r\\n- Verify there are no `.erl` files:\\r\\n```bash\\r\\n$ ls deps/absinthe/src\\r\\nabsinthe_lexer.xrl  absinthe_parser.yrl\\r\\n```\\r\\n- Compile and clean the project: `mix compile && mix clean --deps`\\r\\n- The `.erl` files should be gone after cleaning, but they are not:\\r\\n```bash\\r\\n$ ls deps/absinthe/src/\\r\\nabsinthe_lexer.erl  absinthe_lexer.xrl  absinthe_parser.erl absinthe_parser.yrl\\r\\n```\\r\\n\\r\\n### Environment\\r\\n\\r\\n* Elixir & Erlang/OTP versions (elixir --version): \\r\\n```bash\\r\\n$ elixir --version\\r\\nErlang/OTP 21 [erts-10.1] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:1] [hipe] [dtrace]\\r\\n\\r\\nElixir 1.7.3 (compiled with Erlang/OTP 21)\\r\\n```\\r\\n* Mix version:\\r\\n```bash\\r\\n$ mix --version\\r\\nErlang/OTP 21 [erts-10.1] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:1] [hipe] [dtrace]\\r\\n\\r\\nMix 1.7.3 (compiled with Erlang/OTP 21)\\r\\n```\\r\\n* Operating system: \\r\\nmacOS Mojave 10.14\",\"performed_via_github_app\":null},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/8095\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/8095/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/8095/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/8095/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/8095\",\"id\":351357969,\"node_id\":\"MDU6SXNzdWUzNTEzNTc5Njk=\",\"number\":8095,\"title\":\"Provide an API to access documentation metadata at compile time\",\"user\":{\"login\":\"hauleth\",\"id\":291639,\"node_id\":\"MDQ6VXNlcjI5MTYzOQ==\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/291639?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/hauleth\",\"html_url\":\"https://github.com/hauleth\",\"followers_url\":\"https://api.github.com/users/hauleth/followers\",\"following_url\":\"https://api.github.com/users/hauleth/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/hauleth/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/hauleth/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/hauleth/subscriptions\",\"organizations_url\":\"https://api.github.com/users/hauleth/orgs\",\"repos_url\":\"https://api.github.com/users/hauleth/repos\",\"events_url\":\"https://api.github.com/users/hauleth/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/hauleth/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":17739153,\"node_id\":\"MDU6TGFiZWwxNzczOTE1Mw==\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir\",\"name\":\"App:Elixir\",\"color\":\"CCCCCC\",\"default\":false,\"description\":null},{\"id\":4930795,\"node_id\":\"MDU6TGFiZWw0OTMwNzk1\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Enhancement\",\"name\":\"Kind:Enhancement\",\"color\":\"009800\",\"default\":false,\"description\":null}],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"assignees\":[],\"milestone\":{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/milestones/19\",\"html_url\":\"https://github.com/elixir-lang/elixir/milestone/19\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/milestones/19/labels\",\"id\":1889114,\"node_id\":\"MDk6TWlsZXN0b25lMTg4OTExNA==\",\"number\":19,\"title\":\"v2.0\",\"description\":\"\",\"creator\":{\"login\":\"josevalim\",\"id\":9582,\"node_id\":\"MDQ6VXNlcjk1ODI=\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"open_issues\":2,\"closed_issues\":0,\"state\":\"open\",\"created_at\":\"2016-07-18T10:36:08Z\",\"updated_at\":\"2021-03-30T08:17:50Z\",\"due_on\":null,\"closed_at\":null},\"comments\":8,\"created_at\":\"2018-08-16T20:32:52Z\",\"updated_at\":\"2020-06-23T17:12:38Z\",\"closed_at\":null,\"author_association\":\"CONTRIBUTOR\",\"active_lock_reason\":null,\"body\":\"### Environment\\r\\n\\r\\n* Elixir & Erlang/OTP versions (elixir --version): 1.7.2\\r\\n* Operating system: macOS\\r\\n\\r\\n### Current behavior\\r\\n\\r\\nI wanted to create macro that would allow me to remove boilerplate over generating structures for events in my application. To document such structures I wanted to use `@doc` to simulate feeling that these are normal parts of the external module instead of being separate modules, ex.:\\r\\n\\r\\n```elixir\\r\\ndefmodule MyApp.Event do\\r\\n  import Events\\r\\n\\r\\n  @moduledoc false\\r\\n\\r\\n  @doc \\\"\\\"\\\"\\r\\n  Creation of new submission\\r\\n  \\\"\\\"\\\"\\r\\n  @doc deprecated: \\\"Foo\\\"\\r\\n  defevent SubmissionCreated,\\r\\n    id: any(),\\r\\n    name: String.t(),\\r\\n    author: [map()]\\r\\nend\\r\\n```\\r\\n\\r\\nWhile basic implementation is dumb easy documentation is quite challenging. What I have achieved is:\\r\\n\\r\\n```elixir\\r\\ndefmodule Events do\\r\\n  @moduledoc false\\r\\n\\r\\n  defmacro defevent(module, fields \\\\\\\\ []) do\\r\\n    keys = Keyword.keys(fields)\\r\\n\\r\\n    quote do\\r\\n      docs = Module.get_attribute(__MODULE__, :doc)\\r\\n      deprecated = case Module.get_attribute(__MODULE__, :deprecated) do\\r\\n        nil -> []\\r\\n        value -> [deprecated: value]\\r\\n      end\\r\\n\\r\\n      {set, _} = :elixir_module.data_tables(__MODULE__)\\r\\n      metadata = case :ets.lookup(set, {:doc, :meta}) do\\r\\n        [{{:doc, :meta}, metadata, _}] -> deprecated ++ Keyword.new(metadata)\\r\\n        [] -> deprecated\\r\\n      end\\r\\n\\r\\n      defmodule unquote(module) do\\r\\n        if docs, do: Module.put_attribute(__MODULE__, :moduledoc, docs)\\r\\n        if metadata != [], do: @moduledoc metadata\\r\\n\\r\\n        @type t :: %__MODULE__{unquote_splicing(fields)}\\r\\n\\r\\n        defstruct unquote(keys)\\r\\n      end\\r\\n\\r\\n      :elixir_module.delete_definition_attributes(__ENV__, nil, nil, nil, nil, nil)\\r\\n    end\\r\\n  end\\r\\nend\\r\\n```\\r\\n\\r\\nWhich is fairly ok, except of the part where I need manually get data from ETS for documentation metadata. It cannot be mitigated by using `Module.get_attribute/2` as it explicitly requires atom as a second argument while metadata are stored under `{:doc, :meta}`.\\r\\n\\r\\n### Expected behavior\\r\\n\\r\\nSomehow allow fetching documentation metadata in macros. This would allow macro writers to utilise that metadata in some way like example above.\",\"performed_via_github_app\":null},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/7928\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/7928/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/7928/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/7928/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/7928\",\"id\":342288481,\"node_id\":\"MDU6SXNzdWUzNDIyODg0ODE=\",\"number\":7928,\"title\":\"Improve Logger's gen_event message\",\"user\":{\"login\":\"josevalim\",\"id\":9582,\"node_id\":\"MDQ6VXNlcjk1ODI=\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/9582?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/josevalim\",\"html_url\":\"https://github.com/josevalim\",\"followers_url\":\"https://api.github.com/users/josevalim/followers\",\"following_url\":\"https://api.github.com/users/josevalim/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/josevalim/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/josevalim/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/josevalim/subscriptions\",\"organizations_url\":\"https://api.github.com/users/josevalim/orgs\",\"repos_url\":\"https://api.github.com/users/josevalim/repos\",\"events_url\":\"https://api.github.com/users/josevalim/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/josevalim/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":119389005,\"node_id\":\"MDU6TGFiZWwxMTkzODkwMDU=\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:Logger\",\"name\":\"App:Logger\",\"color\":\"cccccc\",\"default\":false,\"description\":null}],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"assignees\":[],\"milestone\":null,\"comments\":5,\"created_at\":\"2018-07-18T11:28:48Z\",\"updated_at\":\"2020-10-11T10:57:35Z\",\"closed_at\":null,\"author_association\":\"MEMBER\",\"active_lock_reason\":null,\"body\":\"Breaking changes:\\r\\n\\r\\n  * [ ] The timestamp should be in native units instead of a data structure\\r\\n  * [ ] The metadata should be a map instead of a keyword list and we should no longer add module and function keys, furthermore file should be a charlist\\r\\n\\r\\nThese changes may also require changes to the formatter, as it receives both the old time structure and old metadata. In particular, we may want to pass the metadata keys as arguments to the formatter, instead of filtering them in the backend.\\r\\n\\r\\nWe can likely implement this today by having a flag or a function_exported? on each backend. If the new backend is used, it receives and uses the message as is. If the old backend is used, we will wrap it on another GenEvent handler and convert the old message to the new one on the fly.\\r\\n\\r\\nWe should probably start working on this around v1.12, once the Erlang's logger integration solidifies.\",\"performed_via_github_app\":null},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/7541\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/7541/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/7541/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/7541/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/7541\",\"id\":312483494,\"node_id\":\"MDU6SXNzdWUzMTI0ODM0OTQ=\",\"number\":7541,\"title\":\"Parametrized remote types for protocols\",\"user\":{\"login\":\"paulperegud\",\"id\":247162,\"node_id\":\"MDQ6VXNlcjI0NzE2Mg==\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/247162?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/paulperegud\",\"html_url\":\"https://github.com/paulperegud\",\"followers_url\":\"https://api.github.com/users/paulperegud/followers\",\"following_url\":\"https://api.github.com/users/paulperegud/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/paulperegud/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/paulperegud/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/paulperegud/subscriptions\",\"organizations_url\":\"https://api.github.com/users/paulperegud/orgs\",\"repos_url\":\"https://api.github.com/users/paulperegud/repos\",\"events_url\":\"https://api.github.com/users/paulperegud/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/paulperegud/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":17739153,\"node_id\":\"MDU6TGFiZWwxNzczOTE1Mw==\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir\",\"name\":\"App:Elixir\",\"color\":\"CCCCCC\",\"default\":false,\"description\":null},{\"id\":207975,\"node_id\":\"MDU6TGFiZWwyMDc5NzU=\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Feature\",\"name\":\"Kind:Feature\",\"color\":\"0052cc\",\"default\":false,\"description\":null},{\"id\":39802986,\"node_id\":\"MDU6TGFiZWwzOTgwMjk4Ng==\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Level:Advanced\",\"name\":\"Level:Advanced\",\"color\":\"f7c6c7\",\"default\":false,\"description\":null},{\"id\":778790,\"node_id\":\"MDU6TGFiZWw3Nzg3OTA=\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Note:Discussion\",\"name\":\"Note:Discussion\",\"color\":\"bfdadc\",\"default\":false,\"description\":null}],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"assignees\":[],\"milestone\":null,\"comments\":11,\"created_at\":\"2018-04-09T10:51:55Z\",\"updated_at\":\"2018-12-13T20:34:04Z\",\"closed_at\":null,\"author_association\":\"NONE\",\"active_lock_reason\":null,\"body\":\"Being able to parametrize types (`[pos_integer()]`) is a critical feature of dialyzer. Support for parametrization is extended to some of remote types (`:queue.queue(pos_integer())`) but unfortunately not to all of them. \\r\\n\\r\\nOne I miss it the most ability to parametrize Enum (`Enum.t(pos_integer())`).\",\"performed_via_github_app\":null},{\"url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/6738\",\"repository_url\":\"https://api.github.com/repos/elixir-lang/elixir\",\"labels_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/6738/labels{/name}\",\"comments_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/6738/comments\",\"events_url\":\"https://api.github.com/repos/elixir-lang/elixir/issues/6738/events\",\"html_url\":\"https://github.com/elixir-lang/elixir/issues/6738\",\"id\":263948264,\"node_id\":\"MDU6SXNzdWUyNjM5NDgyNjQ=\",\"number\":6738,\"title\":\"with clause cannot match when case is inside else block\",\"user\":{\"login\":\"jordan0day\",\"id\":545037,\"node_id\":\"MDQ6VXNlcjU0NTAzNw==\",\"avatar_url\":\"https://avatars.githubusercontent.com/u/545037?v=4\",\"gravatar_id\":\"\",\"url\":\"https://api.github.com/users/jordan0day\",\"html_url\":\"https://github.com/jordan0day\",\"followers_url\":\"https://api.github.com/users/jordan0day/followers\",\"following_url\":\"https://api.github.com/users/jordan0day/following{/other_user}\",\"gists_url\":\"https://api.github.com/users/jordan0day/gists{/gist_id}\",\"starred_url\":\"https://api.github.com/users/jordan0day/starred{/owner}{/repo}\",\"subscriptions_url\":\"https://api.github.com/users/jordan0day/subscriptions\",\"organizations_url\":\"https://api.github.com/users/jordan0day/orgs\",\"repos_url\":\"https://api.github.com/users/jordan0day/repos\",\"events_url\":\"https://api.github.com/users/jordan0day/events{/privacy}\",\"received_events_url\":\"https://api.github.com/users/jordan0day/received_events\",\"type\":\"User\",\"site_admin\":false},\"labels\":[{\"id\":16893337,\"node_id\":\"MDU6TGFiZWwxNjg5MzMzNw==\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/App:IEx\",\"name\":\"App:IEx\",\"color\":\"CCCCCC\",\"default\":false,\"description\":null},{\"id\":207974,\"node_id\":\"MDU6TGFiZWwyMDc5NzQ=\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Bug\",\"name\":\"Kind:Bug\",\"color\":\"e10c02\",\"default\":false,\"description\":null},{\"id\":39802986,\"node_id\":\"MDU6TGFiZWwzOTgwMjk4Ng==\",\"url\":\"https://api.github.com/repos/elixir-lang/elixir/labels/Level:Advanced\",\"name\":\"Level:Advanced\",\"color\":\"f7c6c7\",\"default\":false,\"description\":null}],\"state\":\"open\",\"locked\":false,\"assignee\":null,\"assignees\":[],\"milestone\":null,\"comments\":15,\"created_at\":\"2017-10-09T16:07:43Z\",\"updated_at\":\"2019-01-21T13:02:57Z\",\"closed_at\":null,\"author_association\":\"NONE\",\"active_lock_reason\":null,\"body\":\"This is very similar to #6380, but shows up when using a `case` expression inside the `else` block of a `with`.\\r\\n\\r\\n### Environment\\r\\n\\r\\n* Elixir & Erlang versions (elixir --version): Elixir 1.5.2, Erlang 20.0\\r\\n* Operating system: OS X 10.12.6 Sierra\\r\\n\\r\\n### Current behavior\\r\\nThe following code functions correctly, but emits the `this clause cannot match because of different types/sizes` warning during compilation.\\r\\n\\r\\n```elixir\\r\\nwith {:first, int1} when is_integer(int1)   <- {:first, Integer.gcd(2, 4)},\\r\\n     {:second, int2} when is_integer(int2)  <- {:second, Integer.gcd(2, 4)} do\\r\\n  {:ok, int1 + int2}\\r\\nelse\\r\\n  error ->\\r\\n    case error do\\r\\n      {:first, nil}  -> {:error, \\\"first number is not integer\\\"}\\r\\n      {:second, nil} -> {:error, \\\"second number is not integer\\\"}\\r\\n    end\\r\\nend\\r\\n```\\r\\n\\r\\nObviously in this example it's not useful to have an embedded case expression, but I've found it to be useful a number of times for logging an error-specific message and then sharing any amount of cleanup/retry code inside the `else` block.\\r\\n\\r\\nFailing test commited to `warning_test.exs` here: https://github.com/jordan0day/elixir/commit/ff4611acf3f1565f7c4989ade96e24a85ea68860\\r\\n\\r\\n\\r\\n\\r\\n### Expected behavior\\r\\nNo warning should be emitted.\\r\\n\",\"performed_via_github_app\":null}]",
      "headers": {
        "Server": "GitHub.com",
        "Date": "Fri, 14 May 2021 06:36:31 GMT",
        "Content-Type": "application/json; charset=utf-8",
        "Cache-Control": "public, max-age=60, s-maxage=60",
        "Vary": "Accept, Accept-Encoding, Accept, X-Requested-With",
        "ETag": "W/\"6bb7dcefe050f804a0547e87d9b718c78404a631888874513a1cccb4700fe453\"",
        "X-GitHub-Media-Type": "github.v3; format=json",
        "Access-Control-Expose-Headers": "ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset",
        "Access-Control-Allow-Origin": "*",
        "Strict-Transport-Security": "max-age=31536000; includeSubdomains; preload",
        "X-Frame-Options": "deny",
        "X-Content-Type-Options": "nosniff",
        "X-XSS-Protection": "0",
        "Referrer-Policy": "origin-when-cross-origin, strict-origin-when-cross-origin",
        "Content-Security-Policy": "default-src 'none'",
        "X-RateLimit-Limit": "60",
        "X-RateLimit-Remaining": "56",
        "X-RateLimit-Reset": "1620975659",
        "X-RateLimit-Resource": "core",
        "X-RateLimit-Used": "4",
        "Accept-Ranges": "bytes",
        "Transfer-Encoding": "chunked",
        "X-GitHub-Request-Id": "2DAE:E697:DF5FF4B:E367568:609E1A6F"
      },
      "status_code": 200,
      "type": "ok"
    }
  }
]